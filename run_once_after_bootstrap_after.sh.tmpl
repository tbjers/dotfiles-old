#!/bin/bash

set -Eeuo pipefail

nwjs_version="v0.57.0"
nwjs_url="https://dl.nwjs.io/${nwjs_version}/nwjs-sdk-${nwjs_version}-linux-x64.tar.gz"
nwjs_home=$HOME/Tools/nwjs

red=$(tput setaf 1)
green=$(tput setaf 2)
reset=$(tput sgr0)

if [ ! "$(command -v chezmoi)" ]; then
  bin_dir="$HOME/bin"
  chezmoi="$bin_dir/chezmoi"
else
  chezmoi=chezmoi
fi

if [ ! -e $HOME/bin/antibody ]; then
    echo "${green}Installing antibody and creating static plugin list${reset}"
    curl -sfL git.io/antibody | sh -s - -b $HOME/bin &&
        chmod +x $HOME/bin/antibody &&
        $HOME/bin/antibody bundle <{{ .chezmoi.homeDir }}/.zsh_plugins.txt > \
            {{ .chezmoi.homeDir }}/.zsh_plugins.sh
fi

if [ ! -d "${nwjs_home}" ]; then
  mkdir -p "${nwjs_home}" &>/dev/null || true
  echo "${green}Installing nwjs ${nwjs_version}${reset}"
  nwjs_dir="$HOME/Tools/nwjs-sdk-${nwjs_version}-linux-x64"
  curl -sfL "${nwjs_url}" | tar -xzf - -C $(dirname $nwjs_home) && mv "${nwjs_dir}" "${nwjs_home}"
fi

echo "${green}Updating vendor dependencies${reset}"
mr -c $HOME/.vendor/.mrconfig update

echo "${green}Copying Oomox Gruvbox configs${reset}"
mkdir -p $HOME/.config/oomox/colors
returnDir="$(pwd)"
cd $HOME/.vendor/gruvmox-colors/src
./generate
cd "${returnDir}"

if [ ! -e /usr/bin/1password ]; then
    echo "${green}Installing 1password${reset}"
    curl -sS https://downloads.1password.com/linux/keys/1password.asc | gpg --import
    CUR_DIR=$(pwd)
    cd $HOME/.vendor/1password
    makepkg -si --noconfirm
    cd "${CUR_DIR}"
fi

echo "${green}Install asdf plugins${reset}"
. $HOME/.vendor/asdf/asdf.sh
asdf plugin list | grep -q "^golang$" || asdf plugin-add golang
asdf plugin list | grep -q "^python$" || asdf plugin-add python
asdf plugin list | grep -q "^1password-cli$" || asdf plugin-add 1password-cli
asdf plugin list | grep -q "^nodejs$" || asdf plugin-add nodejs
asdf plugin list | grep -q "^rust$" || asdf plugin-add rust
asdf plugin list | grep -q "^shellcheck$" || asdf plugin-add shellcheck
asdf plugin list | grep -q "^snyk$" || asdf plugin-add snyk

echo "${green}Enabling all user services${reset}"
systemctl --user enable ~/.config/systemd/user/yubikey-touch-detector.service &>/dev/null || true
echo "${green}Enabling all user sockets${reset}"
systemctl --user enable ~/.config/systemd/user/*.socket &>/dev/null || true
echo "${green}Enabling all user timers${reset}"
systemctl --user enable ~/.config/systemd/user/*.timer &>/dev/null || true

echo "${green}Enable pcscd socket for smart card support${reset}"
sudo systemctl enable --now pcscd.socket
sudo systemctl enable --now pcscd.service

echo "${green}Updating hard-coded icons${reset}"
sudo hardcode-tray --apply --theme "Papirus-Dark" --change-color "#dfdfdf #ebdbb2" "#4285f4 #3c3836" &>/dev/null || true

echo "${green}Cleaning empty media directories${reset}"
rmdir ~/Documents/ ~/Pictures/ ~/Public/ ~/Videos/ &>/dev/null || true

echo "${green}Installing pam_u2f.so in pam.d/system-auth${reset}"
cat {{ .chezmoi.sourceDir }}/patches/pam_d_system_auth-patch.diff.tmpl | exec ${chezmoi} execute-template | sudo patch --force --silent --reject-file=- --forward /etc/pam.d/system-auth &>/dev/null || true

echo "${green}Installing pam_u2f.so in pam.d/sudo${reset}"
cat {{ .chezmoi.sourceDir }}/patches/pam_d_sudo-patch.diff.tmpl | exec ${chezmoi} execute-template | sudo patch --force --silent --reject-file=- --forward /etc/pam.d/sudo &>/dev/null || true

echo "${green}Changing from (possible) https to ssh${reset}"
${chezmoi} git remote set-url origin git@github.com:{{ .chezmoi.username }}/dotfiles

# vim: set ft=sh:
