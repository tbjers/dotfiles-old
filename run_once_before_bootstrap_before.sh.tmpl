#!/bin/bash

set -Eeuo pipefail

# Set secure permissions on created directories and files
umask 077

red=$(tput setaf 1)
green=$(tput setaf 2)
reset=$(tput sgr0)

verlte() {
  printf '%s\n%s' "$1" "$2" | sort -C -V
}

verlt() {
  ! verlte "$2" "$1"
}

install_op() {
    gpg --receive-keys 3FEF9748469ADBE15DA7CA80AC2D62742012EA22 &>/dev/null || true
    tmpdir=$(mktemp -d)
    curl -L -o ${tmpdir}/op.zip https://cache.agilebits.com/dist/1P/op/pkg/v${op_latest}/op_linux_${op_arch}_v${op_latest}.zip
    [[ ! -d $HOME/bin ]] && mkdir -p $HOME/bin
    unzip ${tmpdir}/op.zip -d ${tmpdir} && gpg --verify ${tmpdir}/op.sig ${tmpdir}/op && mv ${tmpdir}/op $HOME/bin
}

op_latest=1.12.3
op_email=torgny.bjers@gmail.com
op_arch="{{ .chezmoi.arch }}"

if [[ ! -e $HOME/bin/op ]]; then
    echo "${green}Installing 1password CLI${reset}"
    install_op
    if [ ! -e $HOME/.config/op/config ]; then
        eval $($HOME/bin/op signin bjers.1password.com ${op_email})
    else
        eval $($HOME/bin/op signin)
    fi
else
    echo "${green}Upgrading 1password CLI${reset}"
    verlt "$(op --version)" "${op_latest}" && install_op
fi

echo "${green}Installing requirements${reset}"

{{ if eq .chezmoi.osRelease.id "ubuntu" "debian" }}

    # TODO: this definitely needs to be updated once I run Ubuntu!

    echo "${green}  Debian/Ubuntu detected...${reset}"
    sudo apt-get update &&
        sudo apt-get -y install git git-crypt lsb-release curl zsh \
            tomb python3-pip gnupg2 pcscd scdaemon pcsc-tools \
            yubikey-manager

{{ else if eq .chezmoi.osRelease.idLike "arch" }}

    echo "${green}  Arch Linux detected...${reset}"
    pamac install --upgrade --no-confirm git curl zsh run-parts unzip \
        neovim fzf yubico-pam yubikey-manager yubikey-touch-detector \
        jq github-cli git-delta bat nextcloud-client gnome-keyring \
        kleopatra seahorse nextcloud-client-cloudproviders myrepos \
        base-devel khal khard vdirsyncer python-requests-oauthlib \
        papirus-icon-theme pam-u2f sxiv procmail neomutt isync \
        notmuch notmuch-runtime afew urlscan w3m msmtp ranger \
        mediainfo highlight atool transmission-cli urlview tmux task \
        taskwarrior-tui gtk2 gtk-engine-murrine alot weechat msmtp
    {{ if not (lookPath "hardcode-tray") }}
    pamac build --no-keep --no-confirm hardcode-tray-git
    {{ end }}

{{ end }}

echo "${green}Install Plug and neovim plugins${reset}"

sh -c 'curl -sfLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
nvim +PlugInstall +qall

# vim: set ft=bash:
